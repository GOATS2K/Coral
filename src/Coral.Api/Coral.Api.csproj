<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>..\coral-app\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<SpaProxyServerUrl>http://localhost:8081</SpaProxyServerUrl>
		<SpaProxyLaunchCommand>bun run web</SpaProxyLaunchCommand>
		<RuntimeIdentifiers>win-x64;osx-arm64;linux-x64</RuntimeIdentifiers>
		<SkipSwaggerGen>false</SkipSwaggerGen>
		<PublishSingleFile>true</PublishSingleFile>
		<DebugType>embedded</DebugType>
		<Version>0.2.0</Version>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="9.0.8" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.8">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Swashbuckle.AspNetCore" Version="9.0.4" />
		<PackageReference Include="System.Runtime.Caching" Version="9.0.8" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Coral.Database.Models\Coral.Database.Models.csproj" />
		<ProjectReference Include="..\Coral.Database\Coral.Database.csproj" />
		<ProjectReference Include="..\Coral.Dto\Coral.Dto.csproj" />
		<ProjectReference Include="..\Coral.Encoders\Coral.Encoders.csproj" />
		<ProjectReference Include="..\Coral.Essentia.Bindings\Coral.Essentia.Bindings.csproj" />
		<ProjectReference Include="..\Coral.Events\Coral.Events.csproj" />
		<ProjectReference Include="..\Coral.PluginHost\Coral.PluginHost.csproj" />
		<ProjectReference Include="..\Coral.Services\Coral.Services.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="Properties\PublishProfiles\" />
	</ItemGroup>

    <Target Name="CopyBindingLibraries" AfterTargets="AfterBuild">
        <ItemGroup>
            <BindingLibraries Include="..\Coral.Essentia.Bindings\lib\**" />
        </ItemGroup>
        <Copy SourceFiles="@(BindingLibraries)" DestinationFolder="$(OutDir)\%(RecursiveDir)" SkipUnchangedFiles="false" />
    </Target>
	
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="pnpm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="pnpm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)out\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<Target Name="SwaggerDocumentGeneration" AfterTargets="PostBuildEvent" Condition="'$(SkipSwaggerGen)' != 'true'">
		<Exec Command="dotnet tool restore" WorkingDirectory="$(ProjectDir)" />
		<Exec Command="dotnet tool run swagger tofile --output openapi.json $(OutputPath)\$(AssemblyName).dll v1" WorkingDirectory="$(ProjectDir)" />
		<Exec Command="bun run generate-client" WorkingDirectory="..\coral-app" />
	</Target>
</Project>
